{"remainingRequest":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/thread-loader/dist/cjs.js!/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/babel-loader/lib/index.js!/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rameshwarbishnoi/byjuassgn/smallassignment/src/components/ConversionHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/src/components/ConversionHistory.vue","mtime":1553500137210},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport _toConsumableArray from \"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport * as Constant from '../common/Constants';\nimport { publishEvent } from '../common/Observer';\nexport default {\n  data: function data() {\n    return {\n      searchLocation: '',\n      jobs: [],\n      expSelected: '',\n      noSearchResults: false,\n      alreadySearched: false,\n      totalCount: 0,\n      searchExp: []\n    };\n  },\n  components: {//Pagination\n  },\n  created: function created() {\n    this.fetchTransactions();\n  },\n  mounted: function mounted() {},\n  methods: {\n    onChange: function onChange(event, location, exp) {\n      console.log(this.expSelected);\n      this.search(location, exp); // this.expSelected = event.target.value;\n    },\n    sortjob: function sortjob(sortText) {\n      sortText == 'exp' ? sortText = 'experience' : sortText == 'companyname' ? sortText = 'companyname' : sortText = 'expiry';\n\n      if (sortText == 'experience') {\n        this.jobs.sort(function (a, b) {\n          return a.experience - b.experience;\n        });\n      } else if (sortText == 'companyname') {\n        this.jobs.sort(function (a, b) {\n          var companyA = a.companyname.toUpperCase().split(' ').join();\n          var companyB = b.companyname.toUpperCase().split(' ').join();\n          console.log(companyA, companyB);\n          return companyA < companyB ? -1 : companyA > companyB ? 1 : 0;\n        });\n        this.jobs.sort(function (a, b) {\n          return a.companyname > b.companyname ? 1 : -1;\n        });\n      } else {\n        this.jobs.sort(function (a, b) {\n          return a.expiryDay - b.expiryDay;\n        });\n      }\n    },\n    fetchTransactions: function fetchTransactions() {\n      var _this = this;\n\n      publishEvent(Constant.SHOW_LOADER);\n      AppConversionService.getJobs().then(function (response) {\n        console.log(response);\n        _this.jobs = response.data.jobsfeed;\n        _this.totalCount = response.data.jobsfeed.length;\n\n        if (_this.totalCount > 0) {\n          _this.noSearchResults = true;\n        }\n\n        for (var i = 0; i < _this.jobs.length; i++) {\n          var expiryDay = Utils.calculateExpiry(_this.jobs[i].enddate);\n          _this.jobs[i].expiryDay = expiryDay;\n        }\n\n        localStorage.setItem('jobs', _JSON$stringify(_this.jobs));\n        publishEvent(Constant.HIDE_LOADER);\n      }).catch(function (error) {\n        publishEvent(Constant.HIDE_LOADER);\n      });\n    },\n    search: function search(location, exp) {\n      var searchResults = [];\n      var searchLocation = location.toLowerCase();\n      this.jobs = JSON.parse(localStorage.getItem('jobs'));\n\n      switch (exp) {\n        case 0:\n          this.searchExp.push(0);\n          break;\n\n        case 1:\n          this.searchExp = _toConsumableArray(Constant.AEXP);\n          break;\n\n        case 2:\n          this.searchExp = _toConsumableArray(Constant.BEXP);\n          break;\n\n        case 3:\n          this.searchExp = _toConsumableArray(Constant.CEXP);\n          break;\n\n        case 4:\n          this.searchExp = _toConsumableArray(Constant.DEXP);\n          break;\n\n        default:\n          this.searchExp = [];\n          break;\n      }\n\n      if (location != '' || exp != '') {\n        this.alreadySearched = true;\n\n        if (location != '' && exp == '') {\n          for (var i = 0; i < this.jobs.length; i++) {\n            var skills = this.jobs[i].skills.split(', ');\n            var newLocation = this.jobs[i].location.toLowerCase().search(searchLocation);\n            var abc = skills.filter(function (skill) {\n              return skill.toLowerCase().indexOf(searchLocation) > -1;\n            });\n\n            if (newLocation > -1 || abc.length > 0) {\n              searchResults.push(this.jobs[i]);\n            }\n          }\n        } else if (location == '' && exp != '') {\n          for (var _i = 0; _i < this.jobs.length; _i++) {\n            for (var j = 0; j < this.searchExp.length; j++) {\n              var newexp = this.jobs[_i].experience == this.searchExp[j] ? true : false;\n\n              if (newexp == true) {\n                searchResults.push(this.jobs[_i]);\n              }\n            }\n          }\n        } else {\n          for (var _i2 = 0; _i2 < this.jobs.length; _i2++) {\n            var _newLocation = this.jobs[_i2].location.toLowerCase().search(searchLocation);\n\n            var _skills = this.jobs[_i2].skills.split(', ');\n\n            var _abc = _skills.filter(function (skill) {\n              return skill.toLowerCase().indexOf(searchLocation) > -1;\n            }); //let newexp = false;\n\n\n            for (var _j = 0; _j < this.searchExp.length; _j++) {\n              var _newexp = this.jobs[_i2].experience == this.searchExp[_j] ? true : false;\n\n              if (_newexp == true) {\n                searchResults.push(this.jobs[_i2]);\n              }\n            }\n\n            if (_newLocation > -1 || _abc.length > 0) {\n              searchResults.push(this.jobs[_i2]);\n            }\n          }\n        }\n\n        this.totalCount = searchResults.length;\n        this.noSearchResults = searchResults.length == 0 ? false : true;\n        this.jobs = [].concat(searchResults);\n      } else {\n        this.Emptysearch();\n        return;\n      }\n    },\n    Emptysearch: function Emptysearch() {\n      this.searchLocation = '';\n      this.expSelected = '';\n\n      if (this.searchLocation != '' || this.expSelected != '') {} else {\n        this.noSearchResults = true;\n        this.alreadySearched = false;\n        this.searchExp = [];\n        this.jobs = JSON.parse(localStorage.getItem('jobs'));\n        this.totalCount = this.jobs.length;\n      }\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["ConversionHistory.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"mainContainer\">\n        <div class=\"searchConatiner\">\n            <div class=\"searchInner\">\n                <div class=\"w100 searchMain\">\n                    <input v-model=\"searchLocation\" v-on:keyup.enter=\"search(searchLocation, expSelected)\" type=\"text\" class=\"\"  placeholder=\"Search for jobs near you (location , skills)\" autocomplete=\"on\" id=\"searchInput\"/>\n                    <select v-model=\"expSelected\">\n                        <option disabled value=\"\">SELECT EXPERIENCE</option>\n                        <option v-bind:value=\"0\">FRESHER</option>\n                        <option v-bind:value=\"1\">1 - 3 YEARS</option>\n                        <option v-bind:value=\"2\">4 - 6 YEARS</option>\n                        <option v-bind:value=\"3\">7 - 9 YEARS</option>\n                        <option v-bind:value=\"4\">10 OR MORE YEARS</option>\n                    </select>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"search(searchLocation, expSelected)\">\n                        <span class=\"search-icon\" >SEARCH</span>\n                    </button>\n                    \n                    </div>\n                    <div class=\"btnDvNew\" v-if=\"alreadySearched\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"Emptysearch()\">\n                        <span class=\"search-icon\" >X</span>\n                    </button>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        <div class=\"jobConatiner\">\n            <div v-if=\"noSearchResults\">\n                <h3> TOTAL JOBS : {{totalCount}} </h3>\n            </div>\n            <div v-if=\"!noSearchResults\"><h2>NO JOBS FOUND</h2></div>\n\n            <div class=\"sorterDV\" v-if=\"alreadySearched\">\n                    <span>SORT SEARCH RESULT BY: </span>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\"  @click=\"sortjob('exp')\">\n                        <span class=\"search-icon\">EXPERIENCE</span>\n                    </button>\n                    </div>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"sortjob('companyname')\">\n                        <span class=\"search-icon\">COMPANY</span>\n                    </button>\n                    </div>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"sortjob('expiry')\">\n                        <span class=\"search-icon\">EXPIRY</span>\n                    </button>\n                    </div>\n            </div>\n            \n            <div class=\"jobCard\" v-for=\"(job, index) in jobs\" :key=\"index\">\n                <div class=\"jobImgDv\">\n                    <div class=\"jobName\">{{job.companyname || 'Company Name Not Disclosed'}} , {{job.location || 'Location not disclosed'}}</div>\n                    <div class=\"jobotherType\">TITLE : {{job.title}}, {{job.type}}</div>\n                    <div class=\"jobotherType\">SKILLS: {{job.skills}}</div>\n                    <div class=\"jobotherType\">EXPERIENCE REQUIRED : {{job.experience}} years</div>\n                    <div class=\"jobotherType\">SALARY OFFERED : {{job.salary || 'Salary not disclosed'}}</div>\n                    <div class=\"jobotherType\">WILL EXPIRE IN : {{job.expiryDay || 'Last Date not disclosed'}} days</div>\n                    <div class=\"jobBottom\"><span class=\"timeSpan\"><img alt=\"star image\" src=\"./../assets/img/clock.svg\" />{{job.startdate}} - {{job.enddate}}</span></div>\n                    <div class=\"jobLinkDv\">\n                        <a :href=\"job.applyink\" target=\"_blank\" class=\"btn new-btn\"><span class=\"search-icon\">Click to apply</span></a>\n                    </div>\n               </div> \n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport * as Constant from '../common/Constants';\nimport { publishEvent } from '../common/Observer';\n\n\n\nexport default {\n   \n    data() {\n        return {\n            searchLocation:'',\n            jobs: [],\n            expSelected:'',\n            noSearchResults:false,\n            alreadySearched:false,\n            totalCount: 0,\n            searchExp : [],\n        }\n    },\n     components: {\n        //Pagination\n    },\n    created() {\n        this.fetchTransactions();\n    },\n    mounted(){\n              \n    },\n    methods: { \n        onChange(event, location, exp) {\n            console.log(this.expSelected);\n            this.search(location, exp)\n           // this.expSelected = event.target.value;\n        },\n\n        sortjob(sortText){\n            sortText == 'exp' ? sortText='experience': sortText=='companyname'? sortText='companyname':sortText='expiry';\n           if(sortText == 'experience'){\n            this.jobs.sort((a,b)=>(a.experience - b.experience));\n           }else if(sortText == 'companyname'){\n                this.jobs.sort(function(a, b) {\n                    var companyA = a.companyname.toUpperCase().split(' ').join();\n                    var companyB = b.companyname.toUpperCase().split(' ').join();\n                    console.log(companyA, companyB);\n                    return (companyA < companyB) ? -1 : (companyA > companyB) ? 1 : 0;\n                });\n\n               this.jobs.sort((a, b) => (a.companyname > b.companyname) ? 1 : -1)\n           }else{\n                this.jobs.sort((a,b)=>(a.expiryDay - b.expiryDay));\n           }\n            \n        },\n\n        fetchTransactions() {\n            publishEvent(Constant.SHOW_LOADER);\n            AppConversionService.getJobs()\n                .then(response => {\n                    console.log(response)\n                    this.jobs = response.data.jobsfeed;\n                    this.totalCount = response.data.jobsfeed.length;\n                    if(this.totalCount > 0){\n                        this.noSearchResults = true;\n                    }\n                    for(let i =0;i<this.jobs.length;i++){\n                        let expiryDay = Utils.calculateExpiry(this.jobs[i].enddate)\n                        this.jobs[i].expiryDay = expiryDay;\n                    }\n                    localStorage.setItem('jobs', JSON.stringify(this.jobs));\n                    publishEvent(Constant.HIDE_LOADER);\n                })\n                .catch(error => {\n                    publishEvent(Constant.HIDE_LOADER);\n                });\n        },\n\n        search(location, exp) {\n            let searchResults = []\n            let searchLocation = location.toLowerCase();\n            this.jobs = JSON.parse(localStorage.getItem('jobs'));\n            switch (exp) {\n                case 0:\n                   this.searchExp.push(0);\n                    break;\n                case 1:\n                    this.searchExp = [...Constant.AEXP];\n                    break;\n                case 2:\n                    this.searchExp = [...Constant.BEXP];\n                    break;\n                case 3:\n                    this.searchExp = [...Constant.CEXP];\n                    break;\n                case 4:\n                    this.searchExp = [...Constant.DEXP];\n                    break;\n                default:\n                    this.searchExp = [];\n                    break;    \n            }\n            \n            if (location != '' || exp !='') {\n\n                this.alreadySearched = true;\n\n                if(location != '' && exp ==''){\n                    for (let i = 0; i < this.jobs.length; i++) {\n                        let skills = this.jobs[i].skills.split(', ');\n                        let newLocation = this.jobs[i].location.toLowerCase().search(searchLocation);\n                        let abc = skills.filter(skill => skill.toLowerCase().indexOf(searchLocation) > -1);\n                        if (newLocation > -1 || abc.length > 0 ) {\n                            searchResults.push(this.jobs[i]);\n                        }\n                    }\n                }\n                else if(location == '' && exp !=''){\n                    for (let i = 0;i < this.jobs.length; i++) {\n                        for(let j = 0;j < this.searchExp.length;j++){\n                            let newexp = this.jobs[i].experience == this.searchExp[j] ? true : false;\n                            if (newexp == true) {\n                                searchResults.push(this.jobs[i]);\n                            }\n                        }\n                        \n                    }\n                }\n                else{\n                    for (let i = 0; i < this.jobs.length; i++) {\n                            let newLocation = this.jobs[i].location.toLowerCase().search(searchLocation);\n                            let skills = this.jobs[i].skills.split(', ');\n                            let abc = skills.filter(skill => skill.toLowerCase().indexOf(searchLocation) > -1);\n                            //let newexp = false;\n                            for(let j = 0;j < this.searchExp.length; j++){\n                               let newexp = this.jobs[i].experience == this.searchExp[j] ? true : false;\n                                if(newexp == true){\n                                     searchResults.push(this.jobs[i]);\n                                }\n                            }\n                            if (newLocation > -1 || abc.length > 0) {\n                                searchResults.push(this.jobs[i]);\n                            }\n                        }\n                }\n                this.totalCount = searchResults.length;\n                this.noSearchResults = (searchResults.length == 0) ? false : true;\n                this.jobs = [...searchResults];\n            } else {\n                this.Emptysearch();\n                return;\n            }\n            \n            \n      },\n\n      Emptysearch() {\n          this.searchLocation = '';\n          this.expSelected = '';\n           if (this.searchLocation != '' || this.expSelected != '') {} else {\n            this.noSearchResults = true;\n            this.alreadySearched = false;\n            this.searchExp = [];\n            this.jobs = JSON.parse(localStorage.getItem('jobs'));\n            this.totalCount = this.jobs.length;\n            }\n        },\n      \n        \n    },\n    computed:{\n        \n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mainContainer {width:100%;\n   .searchConatiner{background:url(./../assets/img/bg.jpg) no-repeat;background-position:100% 50%;width:100%;height:250px;background-size:cover;position:relative;\n    .searchInner{position:absolute;top:50%;left:50%;transform: translate(-50%,-50%);min-width:60%;}\n    .searchMain{position:relative;}\n    input{width:48%;border: unset;margin-right:3%;}\n    select{width:30%;border: unset;margin-right:3%;-webkit-appearance: menulist;appearance: menulist;height:64px;}\n    .btnDv{display: inline-block;width:12%;}\n    \n    .searchResultDv{margin-top: 20px;background: lightgrey;padding: 10px;\n        span{display:inline-block;background: #fff;padding:2px 4px;margin-right:4px;\n        .close{margin:0 2px; cursor:pointer; color: grey;}}\n    }\n    .btnDvNew{display: inline-block;width:4%;}\n    \n\n   }\n   .sorterDV{\n        .btnDv{.new-btn{width:100%;}}\n        }\n   .jobConatiner{\n       width:90%;padding:2% 5%;\n       .jobCard{box-shadow: 0 6px 14px 6px rgba(0, 0, 0, 0.08); width:42%;padding:2%;margin:2%;display:inline-block;\n           .jobImgDv{width:90%;img{width:110px;height:110px;}\n               .jobName{font-size:16px;line-height:18px;font-weight:bold;margin-bottom:10px;}\n               .jobotherType{font-size:13px;}\n               .jobBottom{font-size:14px;margin-top:10px;\n                .timeSpan{display:inline-block;width:100%; img{width:16px;height:16px;vertical-align:-3px;padding-right:4px;}}\n               }\n           }\n           .jobLinkDv{margin: 40px 0 20px 0;\n               a{text-decoration: none;\n               &:hover{text-decoration: none;}}\n            }\n       }\n       .sorterDV{margin-bottom:20px;width:100%;\n       .btnDv{display: inline-block;width:12%;padding-left:20px;}\n       }\n   }\n}\n</style>\n"],"sourceRoot":"src/components"}]}
{"remainingRequest":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rameshwarbishnoi/byjuassgn/smallassignment/src/components/ConversionHistory.vue?vue&type=style&index=0&id=3ed57d6c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/src/components/ConversionHistory.vue","mtime":1553500137210},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rameshwarbishnoi/byjuassgn/smallassignment/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.mainContainer {width:100%;\n   .searchConatiner{background:url(./../assets/img/bg.jpg) no-repeat;background-position:100% 50%;width:100%;height:250px;background-size:cover;position:relative;\n    .searchInner{position:absolute;top:50%;left:50%;transform: translate(-50%,-50%);min-width:60%;}\n    .searchMain{position:relative;}\n    input{width:48%;border: unset;margin-right:3%;}\n    select{width:30%;border: unset;margin-right:3%;-webkit-appearance: menulist;appearance: menulist;height:64px;}\n    .btnDv{display: inline-block;width:12%;}\n    \n    .searchResultDv{margin-top: 20px;background: lightgrey;padding: 10px;\n        span{display:inline-block;background: #fff;padding:2px 4px;margin-right:4px;\n        .close{margin:0 2px; cursor:pointer; color: grey;}}\n    }\n    .btnDvNew{display: inline-block;width:4%;}\n    \n\n   }\n   .sorterDV{\n        .btnDv{.new-btn{width:100%;}}\n        }\n   .jobConatiner{\n       width:90%;padding:2% 5%;\n       .jobCard{box-shadow: 0 6px 14px 6px rgba(0, 0, 0, 0.08); width:42%;padding:2%;margin:2%;display:inline-block;\n           .jobImgDv{width:90%;img{width:110px;height:110px;}\n               .jobName{font-size:16px;line-height:18px;font-weight:bold;margin-bottom:10px;}\n               .jobotherType{font-size:13px;}\n               .jobBottom{font-size:14px;margin-top:10px;\n                .timeSpan{display:inline-block;width:100%; img{width:16px;height:16px;vertical-align:-3px;padding-right:4px;}}\n               }\n           }\n           .jobLinkDv{margin: 40px 0 20px 0;\n               a{text-decoration: none;\n               &:hover{text-decoration: none;}}\n            }\n       }\n       .sorterDV{margin-bottom:20px;width:100%;\n       .btnDv{display: inline-block;width:12%;padding-left:20px;}\n       }\n   }\n}\n",{"version":3,"sources":["ConversionHistory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConversionHistory.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"mainContainer\">\n        <div class=\"searchConatiner\">\n            <div class=\"searchInner\">\n                <div class=\"w100 searchMain\">\n                    <input v-model=\"searchLocation\" v-on:keyup.enter=\"search(searchLocation, expSelected)\" type=\"text\" class=\"\"  placeholder=\"Search for jobs near you (location , skills)\" autocomplete=\"on\" id=\"searchInput\"/>\n                    <select v-model=\"expSelected\">\n                        <option disabled value=\"\">SELECT EXPERIENCE</option>\n                        <option v-bind:value=\"0\">FRESHER</option>\n                        <option v-bind:value=\"1\">1 - 3 YEARS</option>\n                        <option v-bind:value=\"2\">4 - 6 YEARS</option>\n                        <option v-bind:value=\"3\">7 - 9 YEARS</option>\n                        <option v-bind:value=\"4\">10 OR MORE YEARS</option>\n                    </select>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"search(searchLocation, expSelected)\">\n                        <span class=\"search-icon\" >SEARCH</span>\n                    </button>\n                    \n                    </div>\n                    <div class=\"btnDvNew\" v-if=\"alreadySearched\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"Emptysearch()\">\n                        <span class=\"search-icon\" >X</span>\n                    </button>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n        <div class=\"jobConatiner\">\n            <div v-if=\"noSearchResults\">\n                <h3> TOTAL JOBS : {{totalCount}} </h3>\n            </div>\n            <div v-if=\"!noSearchResults\"><h2>NO JOBS FOUND</h2></div>\n\n            <div class=\"sorterDV\" v-if=\"alreadySearched\">\n                    <span>SORT SEARCH RESULT BY: </span>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\"  @click=\"sortjob('exp')\">\n                        <span class=\"search-icon\">EXPERIENCE</span>\n                    </button>\n                    </div>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"sortjob('companyname')\">\n                        <span class=\"search-icon\">COMPANY</span>\n                    </button>\n                    </div>\n                    <div class=\"btnDv\">\n                    <button class=\"btn new-btn\" type=\"button\" @click=\"sortjob('expiry')\">\n                        <span class=\"search-icon\">EXPIRY</span>\n                    </button>\n                    </div>\n            </div>\n            \n            <div class=\"jobCard\" v-for=\"(job, index) in jobs\" :key=\"index\">\n                <div class=\"jobImgDv\">\n                    <div class=\"jobName\">{{job.companyname || 'Company Name Not Disclosed'}} , {{job.location || 'Location not disclosed'}}</div>\n                    <div class=\"jobotherType\">TITLE : {{job.title}}, {{job.type}}</div>\n                    <div class=\"jobotherType\">SKILLS: {{job.skills}}</div>\n                    <div class=\"jobotherType\">EXPERIENCE REQUIRED : {{job.experience}} years</div>\n                    <div class=\"jobotherType\">SALARY OFFERED : {{job.salary || 'Salary not disclosed'}}</div>\n                    <div class=\"jobotherType\">WILL EXPIRE IN : {{job.expiryDay || 'Last Date not disclosed'}} days</div>\n                    <div class=\"jobBottom\"><span class=\"timeSpan\"><img alt=\"star image\" src=\"./../assets/img/clock.svg\" />{{job.startdate}} - {{job.enddate}}</span></div>\n                    <div class=\"jobLinkDv\">\n                        <a :href=\"job.applyink\" target=\"_blank\" class=\"btn new-btn\"><span class=\"search-icon\">Click to apply</span></a>\n                    </div>\n               </div> \n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\nimport AppConversionService from './../service/appConversionService';\nimport Utils from './../common/Utils';\nimport * as Constant from '../common/Constants';\nimport { publishEvent } from '../common/Observer';\n\n\n\nexport default {\n   \n    data() {\n        return {\n            searchLocation:'',\n            jobs: [],\n            expSelected:'',\n            noSearchResults:false,\n            alreadySearched:false,\n            totalCount: 0,\n            searchExp : [],\n        }\n    },\n     components: {\n        //Pagination\n    },\n    created() {\n        this.fetchTransactions();\n    },\n    mounted(){\n              \n    },\n    methods: { \n        onChange(event, location, exp) {\n            console.log(this.expSelected);\n            this.search(location, exp)\n           // this.expSelected = event.target.value;\n        },\n\n        sortjob(sortText){\n            sortText == 'exp' ? sortText='experience': sortText=='companyname'? sortText='companyname':sortText='expiry';\n           if(sortText == 'experience'){\n            this.jobs.sort((a,b)=>(a.experience - b.experience));\n           }else if(sortText == 'companyname'){\n                this.jobs.sort(function(a, b) {\n                    var companyA = a.companyname.toUpperCase().split(' ').join();\n                    var companyB = b.companyname.toUpperCase().split(' ').join();\n                    console.log(companyA, companyB);\n                    return (companyA < companyB) ? -1 : (companyA > companyB) ? 1 : 0;\n                });\n\n               this.jobs.sort((a, b) => (a.companyname > b.companyname) ? 1 : -1)\n           }else{\n                this.jobs.sort((a,b)=>(a.expiryDay - b.expiryDay));\n           }\n            \n        },\n\n        fetchTransactions() {\n            publishEvent(Constant.SHOW_LOADER);\n            AppConversionService.getJobs()\n                .then(response => {\n                    console.log(response)\n                    this.jobs = response.data.jobsfeed;\n                    this.totalCount = response.data.jobsfeed.length;\n                    if(this.totalCount > 0){\n                        this.noSearchResults = true;\n                    }\n                    for(let i =0;i<this.jobs.length;i++){\n                        let expiryDay = Utils.calculateExpiry(this.jobs[i].enddate)\n                        this.jobs[i].expiryDay = expiryDay;\n                    }\n                    localStorage.setItem('jobs', JSON.stringify(this.jobs));\n                    publishEvent(Constant.HIDE_LOADER);\n                })\n                .catch(error => {\n                    publishEvent(Constant.HIDE_LOADER);\n                });\n        },\n\n        search(location, exp) {\n            let searchResults = []\n            let searchLocation = location.toLowerCase();\n            this.jobs = JSON.parse(localStorage.getItem('jobs'));\n            switch (exp) {\n                case 0:\n                   this.searchExp.push(0);\n                    break;\n                case 1:\n                    this.searchExp = [...Constant.AEXP];\n                    break;\n                case 2:\n                    this.searchExp = [...Constant.BEXP];\n                    break;\n                case 3:\n                    this.searchExp = [...Constant.CEXP];\n                    break;\n                case 4:\n                    this.searchExp = [...Constant.DEXP];\n                    break;\n                default:\n                    this.searchExp = [];\n                    break;    \n            }\n            \n            if (location != '' || exp !='') {\n\n                this.alreadySearched = true;\n\n                if(location != '' && exp ==''){\n                    for (let i = 0; i < this.jobs.length; i++) {\n                        let skills = this.jobs[i].skills.split(', ');\n                        let newLocation = this.jobs[i].location.toLowerCase().search(searchLocation);\n                        let abc = skills.filter(skill => skill.toLowerCase().indexOf(searchLocation) > -1);\n                        if (newLocation > -1 || abc.length > 0 ) {\n                            searchResults.push(this.jobs[i]);\n                        }\n                    }\n                }\n                else if(location == '' && exp !=''){\n                    for (let i = 0;i < this.jobs.length; i++) {\n                        for(let j = 0;j < this.searchExp.length;j++){\n                            let newexp = this.jobs[i].experience == this.searchExp[j] ? true : false;\n                            if (newexp == true) {\n                                searchResults.push(this.jobs[i]);\n                            }\n                        }\n                        \n                    }\n                }\n                else{\n                    for (let i = 0; i < this.jobs.length; i++) {\n                            let newLocation = this.jobs[i].location.toLowerCase().search(searchLocation);\n                            let skills = this.jobs[i].skills.split(', ');\n                            let abc = skills.filter(skill => skill.toLowerCase().indexOf(searchLocation) > -1);\n                            //let newexp = false;\n                            for(let j = 0;j < this.searchExp.length; j++){\n                               let newexp = this.jobs[i].experience == this.searchExp[j] ? true : false;\n                                if(newexp == true){\n                                     searchResults.push(this.jobs[i]);\n                                }\n                            }\n                            if (newLocation > -1 || abc.length > 0) {\n                                searchResults.push(this.jobs[i]);\n                            }\n                        }\n                }\n                this.totalCount = searchResults.length;\n                this.noSearchResults = (searchResults.length == 0) ? false : true;\n                this.jobs = [...searchResults];\n            } else {\n                this.Emptysearch();\n                return;\n            }\n            \n            \n      },\n\n      Emptysearch() {\n          this.searchLocation = '';\n          this.expSelected = '';\n           if (this.searchLocation != '' || this.expSelected != '') {} else {\n            this.noSearchResults = true;\n            this.alreadySearched = false;\n            this.searchExp = [];\n            this.jobs = JSON.parse(localStorage.getItem('jobs'));\n            this.totalCount = this.jobs.length;\n            }\n        },\n      \n        \n    },\n    computed:{\n        \n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mainContainer {width:100%;\n   .searchConatiner{background:url(./../assets/img/bg.jpg) no-repeat;background-position:100% 50%;width:100%;height:250px;background-size:cover;position:relative;\n    .searchInner{position:absolute;top:50%;left:50%;transform: translate(-50%,-50%);min-width:60%;}\n    .searchMain{position:relative;}\n    input{width:48%;border: unset;margin-right:3%;}\n    select{width:30%;border: unset;margin-right:3%;-webkit-appearance: menulist;appearance: menulist;height:64px;}\n    .btnDv{display: inline-block;width:12%;}\n    \n    .searchResultDv{margin-top: 20px;background: lightgrey;padding: 10px;\n        span{display:inline-block;background: #fff;padding:2px 4px;margin-right:4px;\n        .close{margin:0 2px; cursor:pointer; color: grey;}}\n    }\n    .btnDvNew{display: inline-block;width:4%;}\n    \n\n   }\n   .sorterDV{\n        .btnDv{.new-btn{width:100%;}}\n        }\n   .jobConatiner{\n       width:90%;padding:2% 5%;\n       .jobCard{box-shadow: 0 6px 14px 6px rgba(0, 0, 0, 0.08); width:42%;padding:2%;margin:2%;display:inline-block;\n           .jobImgDv{width:90%;img{width:110px;height:110px;}\n               .jobName{font-size:16px;line-height:18px;font-weight:bold;margin-bottom:10px;}\n               .jobotherType{font-size:13px;}\n               .jobBottom{font-size:14px;margin-top:10px;\n                .timeSpan{display:inline-block;width:100%; img{width:16px;height:16px;vertical-align:-3px;padding-right:4px;}}\n               }\n           }\n           .jobLinkDv{margin: 40px 0 20px 0;\n               a{text-decoration: none;\n               &:hover{text-decoration: none;}}\n            }\n       }\n       .sorterDV{margin-bottom:20px;width:100%;\n       .btnDv{display: inline-block;width:12%;padding-left:20px;}\n       }\n   }\n}\n</style>\n"]}]}